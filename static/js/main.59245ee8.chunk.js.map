{"version":3,"sources":["assets/images/logo.svg","assets/images/ryanflorence.jpg","assets/images/michaeljackson.jpg","assets/images/kentcdodds.jpg","assets/images/danabramov.jpg","context.js","components/Button/Button.js","components/Title/Title.js","components/ListWrapper/ListItem.js","components/ListWrapper/ListWrapper.js","views/ArticlesView/ArticlesView.js","views/NotesView/NotesView.js","views/TwittersView/TwittersView.js","components/Header/HeaderNavigation.js","components/Header/Header.js","components/Input/Input.js","components/Form/Form.js","components/Modal/Modal.js","views/Root/Root.js","index.js"],"names":["module","exports","AppContext","React","createContext","Button","children","href","secondary","click","target","className","rel","onClick","type","Title","ListItem","image","title","description","link","src","alt","defaultProps","ListWrapper","props","console","log","items","length","map","pojedynczy","key","name","ArticlesView","Consumer","context","articles","NotesView","notes","TwittersView","twitters","HeaderNavigation","basename","exact","activeClassName","to","Header","openModalFn","logoImage","Input","Tag","tag","label","maxLength","onChange","textarea","id","required","placeholder","htmlFor","types","descriptions","twitter","article","Form","state","handleInputChange","e","setState","value","handleRadioButtonChange","this","onSubmit","addItem","checked","close","Component","Modal","Root","isModalOpen","newItem","preventDefault","prevState","closeIsModal","openModal","contextElement","process","Provider","path","component","TwitterView","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59245ee8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a87d0f35.svg\";","module.exports = __webpack_public_path__ + \"static/media/ryanflorence.5086cbe8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/michaeljackson.090afebd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kentcdodds.3a72cbe0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/danabramov.250c0286.jpg\";","import React from 'react';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;","import React from 'react';\r\nimport './Button.scss';\r\n\r\nconst Button = ({children, href, secondary , click,  ...props}) => {\r\n// props ktorego nie podajemy wprost on jest podawany jako innerhtml naszego komponentu\r\nconst lista = \"form__button\"\r\nreturn (\r\n    <>\r\n\r\n    {href ? (\r\n        <a \r\n        href={href}\r\n        target=\"_blank\"\r\n        className=\"listItem__button\"\r\n        rel=\"noopener noreferrer\"\r\n        >\r\n            {children}\r\n        </a>\r\n        \r\n    ) : (\r\n        <button onClick={click} className={secondary ? \"secondary\" : lista}  type=\"submit\" >\r\n            {children} \r\n        </button>\r\n    ) }\r\n    \r\n\r\n</>\r\n)\r\n\r\n        };\r\n\r\nexport default Button;","import React from 'react';\r\nimport './Title.scss';\r\n\r\nconst Title = ({children}) => (\r\n\r\n    <h2 className=\"listItem__name\">{children}</h2>\r\n\r\n\r\n)\r\n\r\nexport default Title;","import React from 'react'\r\nimport './ListItem.css';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../Button/Button';\r\nimport Title from '../Title/Title'\r\n\r\n\r\nconst ListItem = ({image,title,description,link}) => {\r\n\r\nconst has = \"https://unsplash.it/200/200\"\r\n\r\n    return (\r\n        <li className=\"listItem__wrapper\">\r\n        {image && \r\n        <img \r\n        src={image===\"\" ? has : image } \r\n        className=\"listItem__image\"\r\n        alt={title+1}\r\n        />}\r\n        <div>\r\n            <Title>{title}</Title>\r\n            \r\n            <p className=\"listItem__description\">{description}</p>\r\n           {link &&  <Button href={link}>visit twitter page</Button>}\r\n        </div>\r\n    </li> \r\n    )\r\n}\r\n\r\n\r\nListItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    link: PropTypes.string,\r\n    image: PropTypes.string,\r\n\r\n}\r\n\r\nListItem.defaultProps = {\r\n    image: null,\r\n    link: null,\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport ListItem from './ListItem';\r\nimport './ListWrapper.css'\r\n\r\n\r\n\r\nconst ListWrapper = (props) => (\r\n    <>\r\n    {console.log(props.items.length)}\r\n    <ul className=\"listWrapper__wrapper\">\r\n    \r\n    {props.items.length ? props.items.map(pojedynczy=> (\r\n        <ListItem key={pojedynczy.name} {...pojedynczy}/>\r\n    )) : (<h2 className=\"noItems\">\"There's nothing here yet, please add some items!\" </h2>) }\r\n\r\n        \r\n    </ul>\r\n    </>\r\n)\r\n\r\nexport default ListWrapper;","import React from 'react';\r\nimport AppContext from '../../context';\r\nimport List from '../../components/ListWrapper/ListWrapper';\r\nconst ArticlesView = () => (\r\n\r\n\r\n    <AppContext.Consumer>\r\n       {(context) => ( <List items={context.articles}></List>)}\r\n    </AppContext.Consumer>\r\n)\r\n\r\nexport default ArticlesView;","import React from 'react';\r\nimport AppContext from '../../context';\r\nimport List from '../../components/ListWrapper/ListWrapper';\r\nconst NotesView = () => (\r\n\r\n\r\n    <AppContext.Consumer>\r\n       {(context) => ( <List items={context.notes}></List>)}\r\n    </AppContext.Consumer>\r\n)\r\n\r\nexport default NotesView;","import React from 'react';\r\nimport List from '../../components/ListWrapper/ListWrapper';\r\nimport AppContext from '../../context';\r\nconst TwittersView = () => (\r\n\r\n\r\n    <AppContext.Consumer>\r\n       {(context) => ( <List items={context.twitters}></List>)}\r\n    </AppContext.Consumer>\r\n)\r\n\r\nexport default TwittersView;","import React from 'react';\r\nimport {NavLink, HashRouter } from 'react-router-dom';\r\n\r\n//  <li><a href=\"notes\">Notes</a></li> // zapytanie do serwera itddd oraz przeladowanie strony\r\n// <li><Link to=\"notes\">Notes</Link></li> // wstrzykiwanie , bez przeladowania strony dzieki <Link to...\r\n// <NavLink className=\"navigationItemLink\" to=\"/\">Twitters</NavLink> // navlink przyjmuje dodatkowego propsa ktory sie przydaje actioveClassNeme=\"active\" pokazuje ktory jest aktywny\r\nconst HeaderNavigation = () => (\r\n    <HashRouter basename='/'>\r\n<nav>\r\n    <ul className=\"nawigationWrapper\">\r\n        <li className=\"navigationItem\">\r\n        <NavLink exact\r\n        activeClassName=\"navigationItemLinkActive\"\r\n        className=\"navigationItemLink\" to=\"/\">Twitters</NavLink>\r\n        </li>\r\n        <li className=\"navigationItem\">\r\n        <NavLink\r\n        activeClassName=\"navigationItemLinkActive\"\r\n        className=\"navigationItemLink\" to=\"articles\">Articles</NavLink>\r\n        </li>\r\n        <li className=\"navigationItem\">\r\n        <NavLink\r\n        activeClassName=\"navigationItemLinkActive\"\r\n        className=\"navigationItemLink\" to=\"notes\">Notes</NavLink>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n</HashRouter>\r\n)\r\n\r\nexport default HeaderNavigation;","import React from 'react';\r\nimport HeaderNavigation from './HeaderNavigation';\r\nimport './Navigation.scss';\r\nimport logoImage from '../../assets/images/logo.svg'\r\nimport Button from '../Button/Button'\r\n\r\n\r\nconst Header = ({openModalFn}) => (\r\n<>\r\n<header className=\"header__wrapper\">\r\n<img src={logoImage} alt=\"logoImage\"/>\r\n    <HeaderNavigation/>\r\n    <Button click={openModalFn} secondary>New Item</Button>\r\n</header>\r\n</>\r\n)\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Input.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Input = ({tag: Tag, name,label, maxLength, textarea, onChange}) => (\r\n    <>\r\n    <div className=\"form__item\">\r\n    <Tag \r\n        type=\"text\"\r\n        name={name}\r\n        id={name}\r\n        required \r\n        maxLength={maxLength}\r\n        placeholder= \" \"\r\n        onChange={onChange}\r\n        />\r\n        \r\n\r\n    <label className=\"form__label\" htmlFor={name}>{label}</label>\r\n    <div className=\"forms__item__bar\"></div>\r\n    </div>\r\n    </>\r\n)\r\n\r\nInput.propTypes = {\r\n    tag: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    maxLength: PropTypes.number,\r\n}\r\n//jezeli nie bedzie podanego taga w propsach\r\nInput.defaultProps = {\r\n    tag: 'input',\r\n    maxLength: 40,\r\n}\r\n\r\nexport default Input","import React from 'react';\r\nimport './Form.scss';\r\nimport Input from '../Input/Input';\r\nimport Button from '../Button/Button';\r\nimport Title from '../Title/Title';\r\nimport AppContext from '../../context';\r\n\r\n\r\nconst types = {\r\n    twitter: 'twitters',\r\n    notes: 'notes',\r\n    articles: 'articles',\r\n}\r\n\r\nconst descriptions = {\r\n    twitter: 'Twitter description',\r\n    notes: 'Notes description',\r\n    article: 'articles description'\r\n}\r\n\r\n\r\nclass Form extends React.Component {\r\n    state = {\r\n        type: types.twitter,\r\n        title: '',\r\n        link: '',\r\n        image: '',\r\n        description: '',\r\n    }\r\n     \r\n\r\n    handleInputChange = e => {\r\n        // console.log([e.target.name])\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleRadioButtonChange = (type) => {\r\n        this.setState({\r\n            type: type,\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\nrender() {\r\n\r\nconst {type} = this.state;\r\n\r\n    return (\r\n        <AppContext.Consumer>\r\n        {(context) => (\r\n            <div className=\"form__wrapper\">\r\n        <Title>Add new {descriptions[type]}</Title>\r\n        <form className=\"form__form\" onSubmit={ (e)=> context.addItem(e,this.state)}> \r\n               \r\n            <div className=\"newButton\">\r\n               \r\n                <input className=\"input\" id={types.twitter} checked={type===types.twitter} type='radio' onChange={()=> this.handleRadioButtonChange(types.twitter)}></input>\r\n               <label className=\"radio\" htmlFor={types.twitter}>Twitters</label>\r\n\r\n               <input className=\"input\" id={types.notes} checked={type===types.notes} type='radio' onChange={()=> this.handleRadioButtonChange(types.notes)}/>\r\n               <label className=\"radio\" htmlFor={types.notes}>Notes</label>\r\n\r\n               <input className=\"input\" id={types.articles} checked={type===types.articles} type='radio' onChange={()=> this.handleRadioButtonChange(types.articles)}/>\r\n               <label  className=\"radio\" htmlFor={types.articles}>articles</label>\r\n\r\n               <Button className=\"radioButton\" secondary click={this.props.close}>X</Button>\r\n               </div>\r\n                <Input\r\n                onChange={this.handleInputChange}\r\n                value={this.state.title}\r\n                name=\"title\"\r\n                label={type===\"twitters\" ? \"Twitters name\" : \"Title\"}\r\n                maxLength={30}\r\n                />\r\n                \r\n                {type !== types.notes ? (\r\n                    <Input\r\n                    onChange={this.handleInputChange}\r\n                    value={this.state.link}\r\n                    name=\"link\"\r\n                    label={type ===\"twitters\" ? \"Twitter link\" : \"Link\"}\r\n                    /> \r\n                ) : null}\r\n                \r\n                {type===\"twitters\" ? <Input onChange={this.handleInputChange} value={this.state.image} name=\"image\" label=\"Image\"/> : null }\r\n                <Input\r\n                onChange={this.handleInputChange}\r\n                value={this.state.description}\r\n                tag=\"textarea\"\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                />\r\n            \r\n            <Button>add new item</Button>\r\n        </form>\r\n    </div>\r\n        )}\r\n        \r\n        </AppContext.Consumer>\r\n    )\r\n}\r\n}\r\n\r\n\r\nexport default Form;","import React from 'react';\r\nimport './Modal.scss';\r\nimport Form from '../Form/Form';\r\nconst Modal = ({close}) => (\r\n\r\n<div className=\"modal__wrapper\">\r\n    <Form close={close} />\r\n</div>\r\n)\r\n\r\n\r\nexport default Modal;","import React from 'react';\n// import ListWrapper from '../../components/ListWrapper/ListWrapper';\nimport ryanFlorenceImage from '../../assets/images/ryanflorence.jpg'\nimport michaelJacksonImage from '../../assets/images/michaeljackson.jpg'\nimport kentCDoddsImage from '../../assets/images/kentcdodds.jpg'\nimport danAbramovImage from '../../assets/images/danabramov.jpg'\n// import Form from '../../components/Form/Form'\n\nimport ArticlesView from '../ArticlesView/ArticlesView';\nimport NotesView from '../NotesView/NotesView';\nimport TwitterView from '../TwittersView/TwittersView';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Header from '../../components/Header/Header';\nimport './Root.css';\nimport Modal from '../../components/Modal/Modal';\n\nimport AppContext from '../../context';\n\n// const initialStateItems = [\n//   {\n//     image: danAbramovImage,\n//     name: 'Dan Abramov',\n//     description: 'Working on @reactjs. The demo guy.',\n//     twitterLink: 'https://twitter.com/dan_abramov',\n// },\n// {\n//     image: ryanFlorenceImage,\n//     name: 'Ryan Florence',\n//     description: 'Making React accessible for users and developers at https://reach.tech . Online learning, workshops, OSS, and consulting.',\n//     twitterLink: 'https://twitter.com/ryanflorence',\n// },\n// {\n//     image: michaelJacksonImage,\n//     name: 'Michael Jackson',\n//     description: 'Maker. Co-author of React Router. Working on @ReactTraining. Created @unpkg. Head over heels for @cari.',\n//     twitterLink: 'https://twitter.com/mjackson',\n// },\n// {\n//     image: kentCDoddsImage,\n//     name: 'Kent C. Dodds',\n//     description: 'Making software development more accessible · Husband, Father, Latter-day Saint, Teacher, OSS, GDE, @TC39 · @PayPalEng @eggheadio @FrontendMasters · #JS',\n//     twitterLink: 'https://twitter.com/kentcdodds',\n// },\n// ]\n\n\nclass Root extends React.Component {\n  state = {\n      twitters: [\n        {\n          title: 'lorem',\n          description: 'lorem lorem lorem ',\n          link: 'https://google.com',\n          image: 'http://unsplash.it/200/200'\n        },\n        {\n          title: 'lorem',\n          description: 'lorem lorem lorem ',\n          link: 'https://google.com',\n          image: 'http://unsplash.it/200/200'\n        }\n      ],\n      articles: [],\n      notes: [],\n    isModalOpen: false,\n  \n  }\n\n\n\n \n \n  addItem = (e, newItem) => {\n    // console.log(e)\n    // console.log(newItem)\n    e.preventDefault()\n   this.setState(prevState => ({\n     [newItem.type]: [...prevState[newItem.type], newItem]\n   }))\n    this.closeIsModal()\n  }\n\n\n  // <ListWrapper items={this.state.items}/> \n  // <Form submitFn={this.addItem}/>\n  //Navigation -- to jest komponent z linkami \n\n  openModal = () => {\n    this.setState((prevState) =>({\n      isModalOpen: !prevState.isModalOpen,\n    }))\n  }\n\n  closeIsModal = () => {\n    this.setState({\n      isModalOpen: false,\n    })\n  }\n\n  render() {\n    const contextElement = {\n      ...this.state,\n      addItem: this.addItem,\n    }\n    return (\n    \n      //route - sciezki \n      //switch - zeby rozwiazac problemy z exact .. .:id\n      //browserrouter Odpowiada za prawidlowe nawigowanie w przegladarce ma miec jedno dziecko\n      // <Modal/>  //dododawania nowych twitterow noatek i artykulow\n      // <AppContext.Provider> utworzone dla propsow zeby przyjmowaly wszystkie dzieci itd\n\n      <BrowserRouter  basename={process.env.PUBLIC_URL}>  \n      <AppContext.Provider value={contextElement}>\n          <Header openModalFn={this.openModal}/>\n          <Switch>\n            <Route exact path=\"/\" component={TwitterView} /> \n            <Route path=\"/articles\" component={ArticlesView} /> \n            <Route path=\"/notes\" component={NotesView} /> \n            \n          </Switch>\n          {this.state.isModalOpen && <Modal close={this.openModal}/> }\n      </AppContext.Provider>\n      </BrowserRouter>\n    )\n  }\n\n} \nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './views/Root/Root';\nimport './index.css'\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}